version: '3'
services:
  mongodb:
    image: 'mongo:4.4.3'
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGO_INITDB_DATABASE=kazuku

#  nginx:
#    restart: always
#    build:
#      dockerfile: Dockerfile.dev
#      context: ./nginx
#    ports:
#      - '4000:80'
#    depends_on:
#      - api
#      - client

# calling this api instead of server just to make nginx happy (which uses server as a reserved name)
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    ports:
      - '3500:3001'
    depends_on:
      - mongodb
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - KAZUKU_ENV=dev
      - HOST_NAME=0.0.0.0
      - PORT=3001
      - MONGODB_URL=mongodb://kazukuUser:totallytemporary@mongodb:27017/kazuku
      - DATABASE_NAME=kazuku
      - CORS_ALLOWED_ORIGIN=http://localhost:3600
      - SALT_WORK_FACTOR=10
      - JOB_TYPES=publishingJobs
      - CLIENT_SECRET=c>yXb**cwaP^$$k4Z
      - JWT_EXPIRATION_SECONDS=3600
      - REFRESH_EXPIRATION_DAYS=7
      - DEVICEID_MAX_AGE_DAYS=730
      - ORG_CACHE=false
      - DEFAULT_REGENERATION_INTERVAL=10
#  client:
#    build:
#      dockerfile: Dockerfile.dev
#      context: ./client
#    ports:
#      - '3600:4200'
#    depends_on:
#      - mongodb
#      - api
#    volumes:
#      # ensure node_modules in container does not get overwritten by node_modules in client folder
#      - /app/node_modules
#      # ensure everything else in client folder is shared with app folder in container
#      - ./client:/app
#  worker:
#    build:
#      dockerfile: Dockerfile.dev
#      context: ./worker
#    volumes:
#      - /app/node_modules
#      - ./worker:/app
