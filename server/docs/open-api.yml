openapi: 3.0.3
info:
  title: Kazuku API
  description: API for Kazuku admin interface
  version: 1.0.0

servers:
  - url: http://{host}:{port}/api
    description: local server
    variables:
      host:
        default: localhost
        description: api running locally
      port:
        default: '3001'

#global security, applied to the whole API. If you need to apply it to just a few operations, add security on the operation level instead
security:
  - BearerAuth: []
  - ApiKeyAuth: []
  
tags:
  - name: organizations
    description: Organizations are the tenants of Kazuku. Each Organization is completely separate. The MetaOrg has access to all, as administrators.
      Every other resource is accessed within the context of the authenticated user's org.  A "get all templates", for example, 
      means "get all templates within the logged in user's organization". The orgId (the tenantId) is added to all database access automatically for 
      every resource besides organizations themselves.
  - name: auth
  - name: custom-data
  - name: custom-schemas
  - name: queries
  - name: setup
  - name: sites
  - name: templates
  
paths:
  /auth/register:
    $ref: './paths/auth/auth-register.yml'
  /auth/request-token-using-refresh-token:
    $ref: './paths/auth/auth-request-token-using-refresh-token.yml'
  /auth/get-user-context:
    $ref: './paths/auth/auth-get-user-context.yml'
  /auth/select-org-context:
    $ref: './paths/auth/auth-select-org-context.yml'

  /custom-data:
    $ref: './paths/custom-data/custom-data.yml'
  /custom-data/{contentType}:
    $ref: './paths/custom-data/custom-data-content-type.yml'
  /custom-data/{contentType}/{id}:
    $ref: './paths/custom-data/custom-data-content-type-id.yml'
  
  /custom-schemas:
    $ref: './paths/custom-schemas/custom-schemas.yml'
  /custom-schemas/{contentType}:
    $ref: './paths/custom-schemas/custom-schemas-content-type.yml'

  /organizations:
    $ref: './paths/organizations/organizations.yml'
  /organizations/getbyname/{name}:
    $ref: './paths/organizations/organizations-get-by-name.yml'
  /organizations/getbycode/{code}:
    $ref: './paths/organizations/organizations-get-by-code.yml'
  /organizations/{id}:
    $ref: './paths/organizations/organizations-id.yml'

  /queries:
    $ref: './paths/queries/queries.yml'
  /queries/{id}:
    $ref: './paths/queries/queries-id.yml'
  /queries/getbynameid/{nameId}:
    $ref: './paths/queries/queries-get-by-name-id.yml'

  /setup/initial-setup:
    $ref: './paths/setup/setup-initial-setup.yml'
  /setup/setup-state:
    $ref: './paths/setup/setup-setup-state.yml'
  
  /sites:
    $ref: './paths/sites/sites.yml'
  /sites/{id}:
    $ref: './paths/sites/sites-id.yml'
  
  /templates:
    $ref: './paths/templates/templates.yml'
  /templates/get-all-pages:
    $ref: './paths/templates/templates-get-all-pages.yml'
  /templates/get-all-non-page-templates:
    $ref: './paths/templates/templates-get-all-non-page-templates.yml'
  /templates/{id}:
    $ref: './paths/templates/templates-id.yml'
  /templates/get-by-name-id/{nameId}:
    $ref: './paths/templates/templates-get-by-name-id.yml'

components:
  schemas:
    $ref: './schemas/index.yml'
  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: boolean
                enum:
                  - true
                example: true
              item:
                # learn how to substitute a variable in for this reference and use it e.g. Success(Schedule), or somesuch
                $ref: './schemas/organization.yml'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
    NoContent:
      description: No Content
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
